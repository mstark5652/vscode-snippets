{
  "Functional Component": {
    "prefix": "reactfc",
    "body": [
      "import React from 'react'",
      "",
      "const $TM_FILENAME_BASE = () => {",
      "\treturn (",
      "\t\t<>",
      "\t\t\t$0",
      "\t\t</>",
      "\t)",
      "}",
      "",
      "export default $TM_FILENAME_BASE",
      ""
    ],
    "description": "Creates a react functional component based on file name."
  },
  "Functional Component with PropTypes": {
    "prefix": "reactfctype",
    "body": [
      "import React from 'react'",
      "",
      "const $TM_FILENAME_BASE = () => {",
      "\treturn (",
      "\t\t<>",
      "\t\t\t$0",
      "\t\t</>",
      "\t)",
      "}",
      "$TM_FILENAME_BASE.propTypes = {",
      "\t",
      "}",
      "",
      "export default $TM_FILENAME_BASE",
      ""
    ],
    "description": "Creates a react functional component based on file name."
  },
  "Use Fetch Hook": {
    "prefix": "useFetch",
    "body": [
      "const [{ apiResult, isLoading, error }, setPayload, setUrl] = useFetch($0)"
    ],
    "description": "Implements useFetch hook with all resulting values pulled out."
  },
  "Use State Hook": {
    "prefix": "useState",
    "body": [
      "const [${1:state}, set${1/(\\w)/${1:/capitalize}/}] = useState(${2:defaultValue})$0"
    ],
    "description": "Implements useState hook."
  },
  "Use Effect Hook": {
    "prefix": "useEffect",
    "body": [
      "useEffect(() => {",
      "\t$0",
      "}${1:, [$2]})"
    ],
    "description": "Implements useEffect hook."
  }
}
